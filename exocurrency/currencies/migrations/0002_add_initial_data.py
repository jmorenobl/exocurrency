# Generated by Django 2.0.6 on 2018-07-28 22:59
from datetime import date, timedelta

from django.db import migrations

from ...drivers import fixer


SYMBOLS = ['EUR', 'CHF', 'USD', 'GBP']

def load_currencies(apps):
    """Load symbols"""
    Currency = apps.get_model('currencies', 'Currency')

    for symbol in SYMBOLS:
        currency = Currency()
        currency.code = symbol

        if 'EUR' == symbol:
            currency.is_base = True
        
        currency.save()

def load_rates(apps):
    """Load historical rates"""
    Currency = apps.get_model('currencies', 'Currency')
    CurrencyRate = apps.get_model('currencies', 'CurrencyRate')

    historical_days = 30
    today = date.today()
    date_range = []

    currencies = Currency.objects.filter(code__in=SYMBOLS)
    currency_table = {currency.code: currency for currency in currencies}

    for day in range(1, 31):
        date_range.append(today - timedelta(days=day))

    fce = fixer.FixerCurrencyExchange()

    for day in date_range:

        exchange = fce.rates_for_day(day, SYMBOLS)

        for symbol in SYMBOLS:
            currency_rate = CurrencyRate()
            currency_rate.currency = currency_table[symbol]
            currency_rate.date = day
            currency_rate.factor = exchange['rates'][symbol]
            currency_rate.save()

def load_initial_data(apps, schema_editor):
    """Initital currency data is loaded from Fixer"""
    load_currencies(apps)
    load_rates(apps)


class Migration(migrations.Migration):

    dependencies = [
        ('currencies', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(load_initial_data),
    ]
